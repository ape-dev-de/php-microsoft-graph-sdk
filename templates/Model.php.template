<?= "<?php" ?>


declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * <?= $MODEL_NAME ?>

 */
class <?= $MODEL_NAME ?>

{
<?php 
// Sort properties to put 'id' first if it exists
$sortedProperties = [];
if (isset($PROPERTIES['id'])) {
    $sortedProperties['id'] = $PROPERTIES['id'];
}
foreach ($PROPERTIES as $propName => $propDef) {
    if ($propName !== 'id') {
        $sortedProperties[$propName] = $propDef;
    }
}

$propCount = count($sortedProperties);
$currentIndex = 0;
foreach ($sortedProperties as $propName => $propDef): 
    $currentIndex++;
    $type = $propDef['type'];
    $description = $propDef['description'] ?? '';
    $isLast = $currentIndex === $propCount;
    // Normalize property name: convert dashes to camelCase for valid PHP variable names
    $phpPropName = lcfirst(str_replace(' ', '', ucwords(str_replace('-', ' ', $propName))));
    $hasUnion = str_contains($type, '|');
    $isArray = $type === 'array';
?>
<?php if ($isArray): ?>
    /** 
     * <?= $description ? $description : '' ?>

     * @var <?= !empty($propDef['itemType']) ? $propDef['itemType'] . '[]' : 'array<int, mixed>' ?>

     */
    public array $<?= $phpPropName ?> = [];

<?php elseif ($hasUnion): ?>
    /** 
     * <?= $description ? $description : '' ?>

     * @var <?= str_replace('?', '', $type) ?>|null
     */
    public mixed $<?= $phpPropName ?> = null;

<?php else: ?>
    /** <?= $description ? $description : '' ?> */
    public <?= str_starts_with($type, '?') ? $type : '?' . $type ?> $<?= $phpPropName ?> = null;

<?php endif; ?>
<?php endforeach; ?>
<?php if (!empty($sortedProperties)): ?>

    /**
     * Constructor - fast deserialization
     * @param array<string, mixed> $data
     */
    public function __construct(array $data = [])
    {
<?php foreach ($sortedProperties as $propName => $propDef): 
    $phpPropName = lcfirst(str_replace(' ', '', ucwords(str_replace('-', ' ', $propName))));
    $type = $propDef['type'];
    $isDateTime = str_contains($type, 'DateTimeInterface');
?>
        if (isset($data['<?= $propName ?>'])) {
<?php if ($isDateTime): ?>
            $this-><?= $phpPropName ?> = is_string($data['<?= $propName ?>']) ? new \DateTimeImmutable($data['<?= $propName ?>']) : $data['<?= $propName ?>'];
<?php else: ?>
            $this-><?= $phpPropName ?> = $data['<?= $propName ?>'];
<?php endif; ?>
        }
<?php endforeach; ?>
    }
<?php endif; ?>
}
