<?php

declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * WindowsMalwareStateCount
 */
class WindowsMalwareStateCount
{
    /** @var array<string, mixed> Raw data from API response */
    private array $rawData = [];

    /** Count of devices with malware detections for this malware State */
    public ?float $deviceCount = null;

    /** Count of distinct malwares for this malware State. Valid values -2147483648 to 2147483647 */
    public ?float $distinctMalwareCount = null;

    /** The Timestamp of the last update for the device count in UTC */
    public ?\DateTimeInterface $lastUpdateDateTime = null;

    /** Count of total malware detections for this malware State. Valid values -2147483648 to 2147483647 */
    public ?float $malwareDetectionCount = null;

    /**  */
    public ?WindowsMalwareThreatState $state = null;


    /**
     * Constructor - fast deserialization
     * @param array<string, mixed> $data
     */
    public function __construct(array $data = [])
    {
        $this->rawData = $data;
        if (isset($data['deviceCount'])) {
            $this->deviceCount = is_numeric($data['deviceCount']) ? (float)$data['deviceCount'] : $data['deviceCount'];
        }
        if (isset($data['distinctMalwareCount'])) {
            $this->distinctMalwareCount = is_numeric($data['distinctMalwareCount']) ? (float)$data['distinctMalwareCount'] : $data['distinctMalwareCount'];
        }
        if (isset($data['lastUpdateDateTime'])) {
            $this->lastUpdateDateTime = is_string($data['lastUpdateDateTime']) ? new \DateTimeImmutable($data['lastUpdateDateTime']) : $data['lastUpdateDateTime'];
        }
        if (isset($data['malwareDetectionCount'])) {
            $this->malwareDetectionCount = is_numeric($data['malwareDetectionCount']) ? (float)$data['malwareDetectionCount'] : $data['malwareDetectionCount'];
        }
        if (isset($data['state'])) {
            $this->state = is_array($data['state']) ? new WindowsMalwareThreatState($data['state']) : $data['state'];
        }
    }

    /**
     * Get raw data from API response
     * @return array<string, mixed>
     */
    public function getRaw(): array
    {
        return $this->rawData;
    }
}
