<?php

declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * MalwareStateForWindowsDevice
 */
class MalwareStateForWindowsDevice
{
    /**
     * Indicates the number of times the malware is detected
     */
    private ?float $detectionCount;

    /**
     * Indicates the name of the device being evaluated for malware state
     */
    private ?string $deviceName;

    /**
     * Indicates execution status of the malware. Possible values are: unknown, blocked, allowed, running, notRunning. Defaults to unknown. Possible values are: unknown, blocked, allowed, running, notRunning.
     */
    private ?string $executionState;

    /**
     * Initial detection datetime of the malware
     */
    private ?\DateTimeInterface $initialDetectionDateTime;

    /**
     * The last time this particular threat was changed
     */
    private ?\DateTimeInterface $lastStateChangeDateTime;

    /**
     * Malware state for a windows device
     */
    private ?string $threatState;

    public function getDetectionCount(): ?float
    {
        return $this->detectionCount;
    }

    public function setDetectionCount(?float $detectionCount): self
    {
        $this->detectionCount = $detectionCount;
        return $this;
    }

    public function getDeviceName(): ?string
    {
        return $this->deviceName;
    }

    public function setDeviceName(?string $deviceName): self
    {
        $this->deviceName = $deviceName;
        return $this;
    }

    public function getExecutionState(): ?string
    {
        return $this->executionState;
    }

    public function setExecutionState(?string $executionState): self
    {
        $this->executionState = $executionState;
        return $this;
    }

    public function getInitialDetectionDateTime(): ?\DateTimeInterface
    {
        return $this->initialDetectionDateTime;
    }

    public function setInitialDetectionDateTime(?\DateTimeInterface $initialDetectionDateTime): self
    {
        $this->initialDetectionDateTime = $initialDetectionDateTime;
        return $this;
    }

    public function getLastStateChangeDateTime(): ?\DateTimeInterface
    {
        return $this->lastStateChangeDateTime;
    }

    public function setLastStateChangeDateTime(?\DateTimeInterface $lastStateChangeDateTime): self
    {
        $this->lastStateChangeDateTime = $lastStateChangeDateTime;
        return $this;
    }

    public function getThreatState(): ?string
    {
        return $this->threatState;
    }

    public function setThreatState(?string $threatState): self
    {
        $this->threatState = $threatState;
        return $this;
    }

}
