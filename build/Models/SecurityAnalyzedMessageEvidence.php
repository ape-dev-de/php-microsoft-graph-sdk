<?php

declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * SecurityAnalyzedMessageEvidence
 */
class SecurityAnalyzedMessageEvidence
{
    /**
     * Direction of the email relative to your network. The possible values are: inbound, outbound or intraorg.
     */
    private ?string $antiSpamDirection;

    /**
     * Number of attachments in the email.
     */
    private ?float $attachmentsCount;

    /**
     * Delivery action of the email. The possible values are: delivered, deliveredAsSpam, junked, blocked, or replaced.
     */
    private ?string $deliveryAction;

    /**
     * Location where the email was delivered. The possible values are: inbox, external, junkFolder, quarantine, failed, dropped, deletedFolder or forwarded.
     */
    private ?string $deliveryLocation;

    /**
     * Public-facing identifier for the email that is set by the sending email system.
     */
    private ?string $internetMessageId;

    /**
     * Detected language of the email content.
     */
    private ?string $language;

    /**
     * Unique identifier for the email, generated by Microsoft 365.
     */
    private ?string $networkMessageId;

    /**
     * The P1 sender.
     */
    private ?string $p1Sender;

    /**
     * The P2 sender.
     */
    private ?string $p2Sender;

    /**
     * Date and time when the email was received.
     */
    private ?\DateTimeInterface $receivedDateTime;

    /**
     * Email address of the recipient, or email address of the recipient after distribution list expansion.
     */
    private ?string $recipientEmailAddress;

    /**
     * IP address of the last detected mail server that relayed the message.
     */
    private ?string $senderIp;

    /**
     * Subject of the email.
     */
    private ?string $subject;

    /**
     * Collection of methods used to detect malware, phishing, or other threats found in the email.
     */
    private ?string $threatDetectionMethods;

    /**
     * Collection of detection names for malware or other threats found.
     */
    private ?string $threats;

    /**
     * Number of embedded URLs in the email.
     */
    private ?float $urlCount;

    /**
     * Collection of the URLs contained in this email.
     */
    private ?string $urls;

    /**
     * Uniform resource name (URN) of the automated investigation where the cluster was identified.
     */
    private ?string $urn;

    public function getAntiSpamDirection(): ?string
    {
        return $this->antiSpamDirection;
    }

    public function setAntiSpamDirection(?string $antiSpamDirection): self
    {
        $this->antiSpamDirection = $antiSpamDirection;
        return $this;
    }

    public function getAttachmentsCount(): ?float
    {
        return $this->attachmentsCount;
    }

    public function setAttachmentsCount(?float $attachmentsCount): self
    {
        $this->attachmentsCount = $attachmentsCount;
        return $this;
    }

    public function getDeliveryAction(): ?string
    {
        return $this->deliveryAction;
    }

    public function setDeliveryAction(?string $deliveryAction): self
    {
        $this->deliveryAction = $deliveryAction;
        return $this;
    }

    public function getDeliveryLocation(): ?string
    {
        return $this->deliveryLocation;
    }

    public function setDeliveryLocation(?string $deliveryLocation): self
    {
        $this->deliveryLocation = $deliveryLocation;
        return $this;
    }

    public function getInternetMessageId(): ?string
    {
        return $this->internetMessageId;
    }

    public function setInternetMessageId(?string $internetMessageId): self
    {
        $this->internetMessageId = $internetMessageId;
        return $this;
    }

    public function getLanguage(): ?string
    {
        return $this->language;
    }

    public function setLanguage(?string $language): self
    {
        $this->language = $language;
        return $this;
    }

    public function getNetworkMessageId(): ?string
    {
        return $this->networkMessageId;
    }

    public function setNetworkMessageId(?string $networkMessageId): self
    {
        $this->networkMessageId = $networkMessageId;
        return $this;
    }

    public function getP1Sender(): ?string
    {
        return $this->p1Sender;
    }

    public function setP1Sender(?string $p1Sender): self
    {
        $this->p1Sender = $p1Sender;
        return $this;
    }

    public function getP2Sender(): ?string
    {
        return $this->p2Sender;
    }

    public function setP2Sender(?string $p2Sender): self
    {
        $this->p2Sender = $p2Sender;
        return $this;
    }

    public function getReceivedDateTime(): ?\DateTimeInterface
    {
        return $this->receivedDateTime;
    }

    public function setReceivedDateTime(?\DateTimeInterface $receivedDateTime): self
    {
        $this->receivedDateTime = $receivedDateTime;
        return $this;
    }

    public function getRecipientEmailAddress(): ?string
    {
        return $this->recipientEmailAddress;
    }

    public function setRecipientEmailAddress(?string $recipientEmailAddress): self
    {
        $this->recipientEmailAddress = $recipientEmailAddress;
        return $this;
    }

    public function getSenderIp(): ?string
    {
        return $this->senderIp;
    }

    public function setSenderIp(?string $senderIp): self
    {
        $this->senderIp = $senderIp;
        return $this;
    }

    public function getSubject(): ?string
    {
        return $this->subject;
    }

    public function setSubject(?string $subject): self
    {
        $this->subject = $subject;
        return $this;
    }

    public function getThreatDetectionMethods(): ?string
    {
        return $this->threatDetectionMethods;
    }

    public function setThreatDetectionMethods(?string $threatDetectionMethods): self
    {
        $this->threatDetectionMethods = $threatDetectionMethods;
        return $this;
    }

    public function getThreats(): ?string
    {
        return $this->threats;
    }

    public function setThreats(?string $threats): self
    {
        $this->threats = $threats;
        return $this;
    }

    public function getUrlCount(): ?float
    {
        return $this->urlCount;
    }

    public function setUrlCount(?float $urlCount): self
    {
        $this->urlCount = $urlCount;
        return $this;
    }

    public function getUrls(): ?string
    {
        return $this->urls;
    }

    public function setUrls(?string $urls): self
    {
        $this->urls = $urls;
        return $this;
    }

    public function getUrn(): ?string
    {
        return $this->urn;
    }

    public function setUrn(?string $urn): self
    {
        $this->urn = $urn;
        return $this;
    }

}
