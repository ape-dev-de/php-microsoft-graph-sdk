<?php

declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * Alert
 */
class Alert
{
    /**
     * Name or alias of the activity group (attacker) this alert is attributed to.
     */
    private ?string $activityGroupName;

    /**
     */
    private array $alertDetections = [];

    /**
     * Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
     */
    private ?string $assignedTo;

    /**
     * Azure subscription ID, present if this alert is related to an Azure resource.
     */
    private ?string $azureSubscriptionId;

    /**
     * Microsoft Entra tenant ID. Required.
     */
    private ?string $azureTenantId;

    /**
     * Category of the alert (for example, credentialTheft, ransomware).
     */
    private ?string $category;

    /**
     * Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
     */
    private ?\DateTimeInterface $closedDateTime;

    /**
     * Security-related stateful information generated by the provider about the cloud application/s related to this alert.
     */
    private array $cloudAppStates = [];

    /**
     * Customer-provided comments on alert (for customer alert management) (supports update).
     */
    private ?string $comments;

    /**
     * Confidence of the detection logic (percentage between 1-100).
     */
    private ?float $confidence;

    /**
     * Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     */
    private ?\DateTimeInterface $createdDateTime;

    /**
     * Alert description.
     */
    private ?string $description;

    /**
     * Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
     */
    private ?string $detectionIds;

    /**
     * Time at which the event or events that served as the trigger to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     */
    private ?\DateTimeInterface $eventDateTime;

    /**
     * Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. Supports update.
     */
    private ?string $feedback;

    /**
     * Security-related stateful information generated by the provider about the file(s) related to this alert.
     */
    private array $fileStates = [];

    /**
     */
    private array $historyStates = [];

    /**
     * Security-related stateful information generated by the provider about the host(s) related to this alert.
     */
    private array $hostStates = [];

    /**
     * IDs of incidents related to current alert.
     */
    private ?string $incidentIds;

    /**
     */
    private array $investigationSecurityStates = [];

    /**
     */
    private ?\DateTimeInterface $lastEventDateTime;

    /**
     * Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     */
    private ?\DateTimeInterface $lastModifiedDateTime;

    /**
     * Threat Intelligence pertaining to malware related to this alert.
     */
    private array $malwareStates = [];

    /**
     */
    private array $messageSecurityStates = [];

    /**
     * Security-related stateful information generated by the provider about the network connection(s) related to this alert.
     */
    private array $networkConnections = [];

    /**
     * Security-related stateful information generated by the provider about the process or processes related to this alert.
     */
    private array $processes = [];

    /**
     * Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
     */
    private ?string $recommendedActions;

    /**
     * Security-related stateful information generated by the provider about the registry keys related to this alert.
     */
    private array $registryKeyStates = [];

    /**
     * Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
     */
    private array $securityResources = [];

    /**
     */
    private ?string $severity;

    /**
     * Hyperlinks (URIs) to the source material related to the alert, for example, provider''s user interface for alerts or log search.
     */
    private ?string $sourceMaterials;

    /**
     */
    private ?string $status;

    /**
     * User-definable labels that can be applied to an alert and can serve as filter conditions (for example ''HVA'', ''SAW'') (supports update).
     */
    private ?string $tags;

    /**
     * Alert title. Required.
     */
    private ?string $title;

    /**
     * Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
     */
    private array $triggers = [];

    /**
     */
    private array $uriClickSecurityStates = [];

    /**
     * Security-related stateful information generated by the provider about the user accounts related to this alert.
     */
    private array $userStates = [];

    /**
     * Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
     */
    private ?string $vendorInformation;

    /**
     * Threat intelligence pertaining to one or more vulnerabilities related to this alert.
     */
    private ?string $vulnerabilityStates;

    public function getActivityGroupName(): ?string
    {
        return $this->activityGroupName;
    }

    public function setActivityGroupName(?string $activityGroupName): self
    {
        $this->activityGroupName = $activityGroupName;
        return $this;
    }

    public function getAlertDetections(): array
    {
        return $this->alertDetections;
    }

    public function setAlertDetections(array $alertDetections): self
    {
        $this->alertDetections = $alertDetections;
        return $this;
    }

    public function getAssignedTo(): ?string
    {
        return $this->assignedTo;
    }

    public function setAssignedTo(?string $assignedTo): self
    {
        $this->assignedTo = $assignedTo;
        return $this;
    }

    public function getAzureSubscriptionId(): ?string
    {
        return $this->azureSubscriptionId;
    }

    public function setAzureSubscriptionId(?string $azureSubscriptionId): self
    {
        $this->azureSubscriptionId = $azureSubscriptionId;
        return $this;
    }

    public function getAzureTenantId(): ?string
    {
        return $this->azureTenantId;
    }

    public function setAzureTenantId(?string $azureTenantId): self
    {
        $this->azureTenantId = $azureTenantId;
        return $this;
    }

    public function getCategory(): ?string
    {
        return $this->category;
    }

    public function setCategory(?string $category): self
    {
        $this->category = $category;
        return $this;
    }

    public function getClosedDateTime(): ?\DateTimeInterface
    {
        return $this->closedDateTime;
    }

    public function setClosedDateTime(?\DateTimeInterface $closedDateTime): self
    {
        $this->closedDateTime = $closedDateTime;
        return $this;
    }

    public function getCloudAppStates(): array
    {
        return $this->cloudAppStates;
    }

    public function setCloudAppStates(array $cloudAppStates): self
    {
        $this->cloudAppStates = $cloudAppStates;
        return $this;
    }

    public function getComments(): ?string
    {
        return $this->comments;
    }

    public function setComments(?string $comments): self
    {
        $this->comments = $comments;
        return $this;
    }

    public function getConfidence(): ?float
    {
        return $this->confidence;
    }

    public function setConfidence(?float $confidence): self
    {
        $this->confidence = $confidence;
        return $this;
    }

    public function getCreatedDateTime(): ?\DateTimeInterface
    {
        return $this->createdDateTime;
    }

    public function setCreatedDateTime(?\DateTimeInterface $createdDateTime): self
    {
        $this->createdDateTime = $createdDateTime;
        return $this;
    }

    public function getDescription(): ?string
    {
        return $this->description;
    }

    public function setDescription(?string $description): self
    {
        $this->description = $description;
        return $this;
    }

    public function getDetectionIds(): ?string
    {
        return $this->detectionIds;
    }

    public function setDetectionIds(?string $detectionIds): self
    {
        $this->detectionIds = $detectionIds;
        return $this;
    }

    public function getEventDateTime(): ?\DateTimeInterface
    {
        return $this->eventDateTime;
    }

    public function setEventDateTime(?\DateTimeInterface $eventDateTime): self
    {
        $this->eventDateTime = $eventDateTime;
        return $this;
    }

    public function getFeedback(): ?string
    {
        return $this->feedback;
    }

    public function setFeedback(?string $feedback): self
    {
        $this->feedback = $feedback;
        return $this;
    }

    public function getFileStates(): array
    {
        return $this->fileStates;
    }

    public function setFileStates(array $fileStates): self
    {
        $this->fileStates = $fileStates;
        return $this;
    }

    public function getHistoryStates(): array
    {
        return $this->historyStates;
    }

    public function setHistoryStates(array $historyStates): self
    {
        $this->historyStates = $historyStates;
        return $this;
    }

    public function getHostStates(): array
    {
        return $this->hostStates;
    }

    public function setHostStates(array $hostStates): self
    {
        $this->hostStates = $hostStates;
        return $this;
    }

    public function getIncidentIds(): ?string
    {
        return $this->incidentIds;
    }

    public function setIncidentIds(?string $incidentIds): self
    {
        $this->incidentIds = $incidentIds;
        return $this;
    }

    public function getInvestigationSecurityStates(): array
    {
        return $this->investigationSecurityStates;
    }

    public function setInvestigationSecurityStates(array $investigationSecurityStates): self
    {
        $this->investigationSecurityStates = $investigationSecurityStates;
        return $this;
    }

    public function getLastEventDateTime(): ?\DateTimeInterface
    {
        return $this->lastEventDateTime;
    }

    public function setLastEventDateTime(?\DateTimeInterface $lastEventDateTime): self
    {
        $this->lastEventDateTime = $lastEventDateTime;
        return $this;
    }

    public function getLastModifiedDateTime(): ?\DateTimeInterface
    {
        return $this->lastModifiedDateTime;
    }

    public function setLastModifiedDateTime(?\DateTimeInterface $lastModifiedDateTime): self
    {
        $this->lastModifiedDateTime = $lastModifiedDateTime;
        return $this;
    }

    public function getMalwareStates(): array
    {
        return $this->malwareStates;
    }

    public function setMalwareStates(array $malwareStates): self
    {
        $this->malwareStates = $malwareStates;
        return $this;
    }

    public function getMessageSecurityStates(): array
    {
        return $this->messageSecurityStates;
    }

    public function setMessageSecurityStates(array $messageSecurityStates): self
    {
        $this->messageSecurityStates = $messageSecurityStates;
        return $this;
    }

    public function getNetworkConnections(): array
    {
        return $this->networkConnections;
    }

    public function setNetworkConnections(array $networkConnections): self
    {
        $this->networkConnections = $networkConnections;
        return $this;
    }

    public function getProcesses(): array
    {
        return $this->processes;
    }

    public function setProcesses(array $processes): self
    {
        $this->processes = $processes;
        return $this;
    }

    public function getRecommendedActions(): ?string
    {
        return $this->recommendedActions;
    }

    public function setRecommendedActions(?string $recommendedActions): self
    {
        $this->recommendedActions = $recommendedActions;
        return $this;
    }

    public function getRegistryKeyStates(): array
    {
        return $this->registryKeyStates;
    }

    public function setRegistryKeyStates(array $registryKeyStates): self
    {
        $this->registryKeyStates = $registryKeyStates;
        return $this;
    }

    public function getSecurityResources(): array
    {
        return $this->securityResources;
    }

    public function setSecurityResources(array $securityResources): self
    {
        $this->securityResources = $securityResources;
        return $this;
    }

    public function getSeverity(): ?string
    {
        return $this->severity;
    }

    public function setSeverity(?string $severity): self
    {
        $this->severity = $severity;
        return $this;
    }

    public function getSourceMaterials(): ?string
    {
        return $this->sourceMaterials;
    }

    public function setSourceMaterials(?string $sourceMaterials): self
    {
        $this->sourceMaterials = $sourceMaterials;
        return $this;
    }

    public function getStatus(): ?string
    {
        return $this->status;
    }

    public function setStatus(?string $status): self
    {
        $this->status = $status;
        return $this;
    }

    public function getTags(): ?string
    {
        return $this->tags;
    }

    public function setTags(?string $tags): self
    {
        $this->tags = $tags;
        return $this;
    }

    public function getTitle(): ?string
    {
        return $this->title;
    }

    public function setTitle(?string $title): self
    {
        $this->title = $title;
        return $this;
    }

    public function getTriggers(): array
    {
        return $this->triggers;
    }

    public function setTriggers(array $triggers): self
    {
        $this->triggers = $triggers;
        return $this;
    }

    public function getUriClickSecurityStates(): array
    {
        return $this->uriClickSecurityStates;
    }

    public function setUriClickSecurityStates(array $uriClickSecurityStates): self
    {
        $this->uriClickSecurityStates = $uriClickSecurityStates;
        return $this;
    }

    public function getUserStates(): array
    {
        return $this->userStates;
    }

    public function setUserStates(array $userStates): self
    {
        $this->userStates = $userStates;
        return $this;
    }

    public function getVendorInformation(): ?string
    {
        return $this->vendorInformation;
    }

    public function setVendorInformation(?string $vendorInformation): self
    {
        $this->vendorInformation = $vendorInformation;
        return $this;
    }

    public function getVulnerabilityStates(): ?string
    {
        return $this->vulnerabilityStates;
    }

    public function setVulnerabilityStates(?string $vulnerabilityStates): self
    {
        $this->vulnerabilityStates = $vulnerabilityStates;
        return $this;
    }

}
