<?php

declare(strict_types=1);

namespace ApeDevDe\MicrosoftGraphSdk\Models;

/**
 * WindowsMalwareCategoryCount
 */
class WindowsMalwareCategoryCount
{
    /**
     * Count of active malware detections for this malware category. Valid values -2147483648 to 2147483647
     */
    private ?float $activeMalwareDetectionCount;

    /**
     */
    private ?string $category;

    /**
     * Count of devices with malware detections for this malware category
     */
    private ?float $deviceCount;

    /**
     * Count of distinct active malwares for this malware category. Valid values -2147483648 to 2147483647
     */
    private ?float $distinctActiveMalwareCount;

    /**
     * Malware category device count
     */
    private ?\DateTimeInterface $lastUpdateDateTime;

    public function getActiveMalwareDetectionCount(): ?float
    {
        return $this->activeMalwareDetectionCount;
    }

    public function setActiveMalwareDetectionCount(?float $activeMalwareDetectionCount): self
    {
        $this->activeMalwareDetectionCount = $activeMalwareDetectionCount;
        return $this;
    }

    public function getCategory(): ?string
    {
        return $this->category;
    }

    public function setCategory(?string $category): self
    {
        $this->category = $category;
        return $this;
    }

    public function getDeviceCount(): ?float
    {
        return $this->deviceCount;
    }

    public function setDeviceCount(?float $deviceCount): self
    {
        $this->deviceCount = $deviceCount;
        return $this;
    }

    public function getDistinctActiveMalwareCount(): ?float
    {
        return $this->distinctActiveMalwareCount;
    }

    public function setDistinctActiveMalwareCount(?float $distinctActiveMalwareCount): self
    {
        $this->distinctActiveMalwareCount = $distinctActiveMalwareCount;
        return $this;
    }

    public function getLastUpdateDateTime(): ?\DateTimeInterface
    {
        return $this->lastUpdateDateTime;
    }

    public function setLastUpdateDateTime(?\DateTimeInterface $lastUpdateDateTime): self
    {
        $this->lastUpdateDateTime = $lastUpdateDateTime;
        return $this;
    }

}
